steps:
  # Run tests
  - name: 'python:3.11'
    entrypoint: pip
    args: ['install', '-r', 'requirements.txt', '-t', '.']
    
  - name: 'python:3.11'
    entrypoint: python
    args: ['-m', 'pytest', 'tests/']
    
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/ecommerce-backend', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/ecommerce-backend']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'ecommerce-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/ecommerce-backend'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'ENVIRONMENT=production,GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--set-secrets'
      - |
        DB_USER=projects/$PROJECT_ID/secrets/db-user:latest,
        DB_PASSWORD=projects/$PROJECT_ID/secrets/db-password:latest,
        FIREBASE_CREDENTIALS=projects/$PROJECT_ID/secrets/firebase-credentials:latest
      - '--service-account'
      - 'ecommerce-backend@$PROJECT_ID.iam.gserviceaccount.com'

images:
  - 'gcr.io/$PROJECT_ID/ecommerce-backend'

timeout: '1800s'

options:
  logging: CLOUD_LOGGING_ONLY 